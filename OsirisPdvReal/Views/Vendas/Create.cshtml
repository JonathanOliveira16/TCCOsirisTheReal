@model OsirisPdvReal.Models.Venda

@{
    ViewData["Title"] = "Create";
}

<div class="modal" id="visao" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title font-weight-bold" id="titleModal">Informações adicionais</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <label class="font-weight-bold ml-3 control-label">Quantidade vendida</label>
                <input class="form-control borderInput" type="number" required id="quantidadeProduto" />
                <label class="control-label ml-3 font-weight-bold" style="visibility:visible" id="lblCli">Cliente</label>
                <select id="clienteDrop" style="visibility:visible" name="bairroBusca" class="form-control borderInput">
                    @foreach (var y in ViewBag.clientes)
                    {
                        <option value="@y.NomeCliente">@y.NomeCliente</option>
                    }
                </select>
                <label class="control-label ml-3 font-weight-bold" style="visibility:visible" id="lblBan">Banca</label>
                <select id="bancaDrop" style="visibility:visible" name="bairroBusca" class="form-control borderInput">
                    @foreach (var y in ViewBag.banca)
                    {
                        <option value="@y.NomeBanca">@y.NomeBanca</option>
                    }
                </select>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success botaoDoId" onclick="AddCarrinho()" style="font-size:12px;">Adicionar no carrinho</button>
                <button type="button" class="btn btn-danger" style="font-size:12px;" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>

<h5 class="divBtn fontTitles">REALIZAR VENDA</h5>
<hr />
<div class="row">
    <div class="col-md-2">

    </div>
    <div class="col-md-8">
        <!--Parte de produtos inicio-->
        <div>
            <div class="d-flex">
                <form asp-action="SearchProduto">
                    <div class="d-flex">
                        <input type="text" class="form-control borderInput" name="busca" id="busca" placeholder="Pesquisar..." />
                        <button class="btn btn-success searchBtn" style="margin-left:1%;"><i class="fa fa-search text-white"></i></button>
                    </div>
                </form>
                <form asp-action="SearchTipo" class="ml-3">
                    <div class="d-flex">
                        @*<input type="text" class="form-control borderInput w-50" name="busca" id="busca" placeholder="Pesquisar produto..." />*@
                        <select class="form-control borderInput" style="width:200px;" name="buscaTipo">
                            <option value="" selected>Tipos de produtos...</option>
                            @foreach (var tipo in ViewBag.Tipos)
                            {
                                <option value="@tipo">@tipo</option>
                            }
                        </select>
                        <button class="btn btn-success searchBtn" style="margin-left:1%;"><i class="fa fa-search text-white"></i></button>
                    </div>
                </form>
            </div>
            <div class="data-container"></div>
            <div id="pagination-demo1"></div>
            <table id="table-id" class="table mt-4 table-striped">
                <thead class="tHeadPurple">
                    <tr>
                        <th class="text-white" style="font-size:13px;">
                            Nome Produto
                        </th>
                        <th class="text-white" style="font-size:13px;">
                            Estoque
                        </th>
                        <th class="text-white" style="font-size:13px;">
                            Valor
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.produtos)
                    {
                        <tr>
                            <td style="font-size:13px;">
                                @item.NomeProduto
                            </td>
                            <td style="font-size:13px;">
                                @item.QuantideProduto
                            </td>
                            <td style="font-size:13px;">
                                @item.ValorProduto
                            </td>
                            <td class="float-right">
                                <a class="btn-sm btn-success text-white btnVenda btnProd" data-toggle="modal" data-target="#visao">Adicionar</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!--		Start Pagination -->
            <div class='pagination-container' id="page1" style="visibility:hidden">
                <nav>
                    <ul class="pagination pageArr">

                        <li data-page="prev">
                            <span style="border: 3px solid purple;margin-right:6px;border-radius:5px;color:black"> <i class="fa fa-arrow-left"></i> <span class="sr-only">(current)</span></span>
                        </li>
                        <!--	Here the JS Function Will Add the Rows -->
                        <li data-page="next" id="prev">
                            <span style="border: 3px solid purple;margin-left:6px;border-radius:5px"> <i class="fa fa-arrow-right"></i> <span class="sr-only">(current)</span></span>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

        <div style="visibility:hidden;">
            <h2>Select Number Of Rows</h2>
            <div class="form-group">
                <!--		Show Numbers Of Rows 		-->
                <select class="form-control" name="state" id="maxRows">
                    <option value="5000">Show ALL Rows</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="70">70</option>
                    <option value="100">100</option>
                </select>

            </div>
        </div>
    </div>
    <!--fim parte produtos-->
</div>

<div class="card" id="cardCar" style="visibility:hidden">
    <div class="card-header fontTitles text-center text-white" style="background-color: #00AA9E;">
        CARRINHO
    </div>
    <div class="card-body">
        <table class="table table-striped" id="tableVenda">
            <thead>
                <tr>
                    <th class="font-weight-bold">
                        Produto
                    </th>
                    <th class="font-weight-bold">
                        Valor total
                    </th>
                    <th class="font-weight-bold">
                        Nome Cliente
                    </th>
                    <th class="font-weight-bold">
                        Quantidade vendida
                    </th>
                    <th class="font-weight-bold">
                        Banca
                    </th>
                </tr>
            </thead>
            <tbody>
            </tbody>

        </table>
        <a class="btn-sm btn-success text-white float-right" id="vender">FINALIZAR</a>

    </div>
    <div class="card-footer text-muted">
        <div class="d-flex mt-3">
            <p>Valor Total: </p> <p class="font-weight-bold" id="valTotalTable"></p>
        </div>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        window.onbeforeunload = function () {
            console.log('tam array' + dadosTableRefresh)
            localStorage.setItem("prods", dadosTableRefresh);

        }

        //$(".modal").modal('hide');
        var arrData = [];
        var dadosProds = [];
        var dadoSplitTable = []
        var tabelaProd = localStorage.getItem("prods");
        if (tabelaProd != undefined) {
             dadoSplitTable = tabelaProd.split('/');
        }
        var dadosTableRefresh = []
        if (dadoSplitTable.length == 0) {
            dadosTableRefresh = []
            console.log("zeradpo" + dadosTableRefresh)
            location.reload()
        } else {
            for (z = 1; z < dadoSplitTable.length; z++) {
                var xx = dadoSplitTable[z].split(',')
                dadosTableRefresh.push("/"+xx);
                console.log("datado" + dadosTableRefresh)
            }

        }
        var clienteSelect = ""
        var bancaSelect = ""
        //nome,valor,quantidade,cliente
        var tabelaProd = localStorage.getItem("prods");
        var dadoSplitTable = tabelaProd.split('/');
        if (dadoSplitTable.length > 1) {
            var valTotal = 0
            for (j = 1; j < dadoSplitTable.length; j++) {
                var data = dadoSplitTable[j].split(',')
                var x = data[2];
                var e = data[3]
                var y = data[1];
                var banca = data[4]
                var lenTable = document.getElementById("tableVenda").rows.length;

                var strUser = e;
                var letters = '/^[a-zA-Z]+$/';

                    var rows = "";
                var name = data[0];
                var valor = y;
                var quantidade = x;
                var bancaSelecionada = banca
                var clienteVal = e
                rows += "<tr><td>" + name + "</td><td>" + 'R$' + valor + "</td><td>" + clienteVal + "</td><td>" + quantidade + "</td><td>" + bancaSelecionada + "</td><td> <a class='btn-sm btn-danger text-white' style='margin-left:90px'  id='DeleteButton'>REMOVER</a></td></tr>";
                    $(rows).appendTo("#tableVenda");

                document.getElementById("cardCar").style.visibility = "visible";
                document.getElementById("clienteDrop").style.visibility = "hidden";
                document.getElementById("bancaDrop").style.visibility = "hidden";
                document.getElementById("lblCli").style.visibility = "hidden";
                document.getElementById("lblBan").style.visibility = "hidden";
                valTotal = valTotal + Number(y)
            }
            var valorTotalDaVenda = document.getElementById("valTotalTable");
            var vt = valTotal
            valorTotalDaVenda.textContent = vt.toFixed(2)
        }
        // loop over each table row (tr)
        //$("#table-id tr").each(function () {
        //    var currentRow = $(this);

        //    var col1_value = currentRow.find("td:eq(0)").text();
        //    var col2_value = currentRow.find("td:eq(1)").text();
        //    var col3_value = currentRow.find("td:eq(2)").text();

        //    var obj = {};
        //    obj.col1 = col1_value;
        //    obj.col2 = col2_value;
        //    obj.col3 = col3_value;

        //    arrData.push(obj);
        //});

        $("#vender").on("click",function () {
            var dadosProds = []
            var arrayFinal = []
            var valTot = document.getElementById("valTotalTable").textContent
            console.log("val total" + valTot)
            $("#tableVenda tr").each(function () {
                var currentRow = $(this);

                var nomeProd = currentRow.find("td:eq(0)").text();
                var valorProd = currentRow.find("td:eq(1)").text();
                var clienteName = currentRow.find("td:eq(2)").text();
                var quantidadeProd = currentRow.find("td:eq(3)").text();
                var banca = currentRow.find("td:eq(4)").text();
                dadosProds.push(nomeProd)
                dadosProds.push(valorProd)
                dadosProds.push(clienteName)
                dadosProds.push(quantidadeProd)
                dadosProds.push(banca)
            })


            $.ajax({
                url: "/Vendas/SalvarVenda",
                method: "POST",
                data: { dados: dadosProds, valTotal: valTot },
                datatype: "json",
                success: function (data) {
                    $.ajax({
                        url: "/Vendas/Index",
                        type: "get",
                        success: function () {
                            window.location.href = '/Vendas/Index'
                        }
                    });
                }
            });
        });

        $("#tableVenda").on("click", "#DeleteButton", function () {
            var currentRow = $(this).closest("tr");
            $(this).closest("tr").remove();
            dadosTableRefresh = []
            console.log(dadosTableRefresh)
            var arrProFinal = []
            console.log('new array zerado')
            console.log("array excluido | ")
            $("#tableVenda tr").each(function () {
                var x = document.getElementById("tableVenda").rows.length;
                if (x == 1) {
                    document.getElementById("cardCar").style.visibility = "hidden";
                    document.getElementById("clienteDrop").style.visibility = "visible";
                    document.getElementById("bancaDrop").style.visibility = "visible";
                    document.getElementById("lblCli").style.visibility = "visible";
                    document.getElementById("lblBan").style.visibility = "visible";
                } else {
                    var currentRow = $(this);

                    var col1_value = currentRow.find("td:eq(0)").text();
                    var col2_value = currentRow.find("td:eq(1)").text();
                    var col3_value = currentRow.find("td:eq(2)").text();
                    var col4_value = currentRow.find("td:eq(3)").text();
                    var col5_value = currentRow.find("td:eq(4)").text();
                    var dadosProds = []
                    dadosProds.push("/" + col1_value)
                    dadosProds.push(col2_value.replace('R$', ''))
                    dadosProds.push(col4_value)
                    dadosProds.push(col3_value)
                    dadosProds.push(col5_value)

                    arrProFinal.push(dadosProds);
                    console.log(arrProFinal)
                    console.log('new array rewformulado')

                }
            });
            console.log(arrProFinal)
            console.log("array pre finial")
            for (o = 1; o < arrProFinal.length; o++) {
                dadosTableRefresh.push(arrProFinal[o])
            }
            console.log(dadosTableRefresh)
            console.log("array  finial")
        });

        $("#table-id").on('click', '.btnProd', function () {
                // get the current row
            var currentRow = $(this).closest("tr");
            dadosProds = []
            var col1 = currentRow.find("td:eq(0)").html(); // nnome
            var col2 = currentRow.find("td:eq(1)").html(); // quantidade
            var col3 = currentRow.find("td:eq(2)").html(); // valor
            col1 = col1.trimStart()
            col1 = col1.trimEnd();
            col2 = col2.trimStart()
            col2 = col2.trimEnd();
            col3 = col3.trimStart()
            col3 = col3.trimEnd();
            //console.log(col3.substring(2))
            //console.log(col2)
            //var valTotal = Number(col2) * Number(col3.substring(2))
            dadosProds.push(col1)
            dadosProds.push(col2)
            dadosProds.push(col3)

            console.log(dadosProds)
        });

        $("#table-id").on('click', '.btnCli', function () {
            // get the current row
            var currentRow = $(this).closest("tr");

            var col1 = currentRow.find("td:eq(0)").html(); // get current row 1st table cell TD value
            var col2 = currentRow.find("td:eq(1)").html(); // get current row 2nd table cell TD value
            var data = col1 + "\n" + col2


        });

        function AddCarrinho() {
            var valorTotalDaVenda = document.getElementById("valTotalTable");

            var quant = document.getElementById("quantidadeProduto").value
            var valorConvertido = ""
            if (/[,\-]/.test(dadosProds[2])) {
                valorConvertido = dadosProds[2].replace(',','.')
            }
            var valTotal = 0
            if (valorConvertido == "") {
                valTotal = Number(dadosProds[2].substring(2)) * Number(quant)

            } else {
                valTotal = Number(valorConvertido.substring(2)) * Number(quant)
            }



            var x = quant;
            var e = ""
            var banca = ""
            var y = valTotal.toFixed(2);
            var lenTable = document.getElementById("tableVenda").rows.length;

            if (clienteSelect == "" || clienteSelect == null) {
                e = document.getElementById("clienteDrop");
                clienteSelect = e
            } else {
                e = clienteSelect
            }

            if (bancaSelect == "" || bancaSelect == null) {
                banca = document.getElementById("bancaDrop");
                bancaSelect = banca
            } else {
                banca = bancaSelect
            }
            var strUser = e.options[e.selectedIndex].text;
            var bancaUser = banca.options[e.selectedIndex].text;
            var letters = '/^[a-zA-Z]+$/';
            if ((parseInt(quant) != (x)) && (y == parseInt(y))) {
               alert("Valor inválido");
            } else {
                var rows = "";
                var name = dadosProds[0];
                var valor = valTotal.toFixed(2);
                var quantidade = quant;
                var clienteVal = strUser
                var bancaSelecionada = bancaUser
                rows += "<tr><td>" + name + "</td><td>" + 'R$' + valor + "</td><td>" + clienteVal + "</td><td>" + quantidade + "</td><td>" + bancaSelecionada + "</td><td> <a class='btn-sm btn-danger text-white' style='margin-left:90px' id='DeleteButton'>REMOVER</a></td></tr>";
                $(rows).appendTo("#tableVenda");
            }
            $(".modal").modal('hide');
            var vt = Number(valorTotalDaVenda.textContent) + Number(valor)
            valorTotalDaVenda.textContent = vt.toFixed(2)

            document.getElementById("quantidadeProduto").value = "";
            document.getElementById("cardCar").style.visibility = "visible";
            document.getElementById("clienteDrop").style.visibility = "hidden";
            document.getElementById("bancaDrop").style.visibility = "hidden";
            document.getElementById("lblCli").style.visibility = "hidden";
            document.getElementById("lblBan").style.visibility = "hidden";
            var dadoCheio = ["/" + dadosProds[0], valor, quant, strUser, bancaSelecionada]
            console.log(dadoCheio)
            dadosTableRefresh.push(dadoCheio)

        }

        var countProd = '@(ViewBag.countProd)';
        var countCli = '@(ViewBag.countCli)';
        getPagination('#table-id');
        getPagination2('#table-id2');

        if (countCli > 5) {
            document.getElementById("page2").style.visibility = "visible";
        } else {
            document.getElementById("page2").style.visibility = "hidden";
        }

        if (countProd > 5) {
            document.getElementById("page1").style.visibility = "visible";
        } else {
            document.getElementById("page1").style.visibility = "hidden";
        }
        //getPagination('.table-class');
        //getPagination('table');

        /*					PAGINATION
        - on change max rows select options fade out all rows gt option value mx = 5
        - append pagination list as per numbers of rows / max rows option (20row/5= 4pages )
        - each pagination li on click -> fade out all tr gt max rows * li num and (5*pagenum 2 = 10 rows)
        - fade out all tr lt max rows * li num - max rows ((5*pagenum 2 = 10) - 5)
        - fade in all tr between (maxRows*PageNum) and (maxRows*pageNum)- MaxRows
        */


        function getPagination(table) {
            var lastPage = 1;

            $('#maxRows')
                .on('change', function (evt) {
                    //$('.paginationprev').html('');						// reset pagination

                    lastPage = 1;
                    $('.pageArr')
                        .find('li')
                        .slice(1, -1)
                        .remove();
                    var trnum = 0; // reset tr counter
                    var maxRows = parseInt($(this).val()); // get Max Rows from select option

                    if (maxRows == 5000) {
                        $('.pageArr').hide();
                    } else {
                        $('.pageArr').show();
                    }

                    var totalRows = $(table + ' tbody tr').length; // numbers of rows
                    $(table + ' tr:gt(0)').each(function () {
                        // each TR in  table and not the header
                        trnum++; // Start Counter
                        if (trnum > maxRows) {
                            // if tr number gt maxRows

                            $(this).hide(); // fade it out
                        }
                        if (trnum <= maxRows) {
                            $(this).show();
                        } // else fade in Important in case if it ..
                    }); //  was fade out to fade it in
                    if (totalRows > maxRows) {
                        // if tr total rows gt max rows option
                        var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
                        //	numbers of pages
                        for (var i = 1; i <= pagenum;) {
                            // for each page append pagination li
                            $('.pageArr #prev')
                                .before(
                                    '<li data-page="' +
                                    i +
                                    '">\
                                              <span>' +
                                    i++ +
                                    '<span class="sr-only">(current)</span></span>\
                                            </li>'
                                )
                                .show();
                        } // end for i
                    } // end if row count > max rows
                    $('.pageArr [data-page="1"]').addClass('active'); // add active class to the first li
                    $('.pageArr li').on('click', function (evt) {
                        // on click each page
                        evt.stopImmediatePropagation();
                        evt.preventDefault();
                        var pageNum = $(this).attr('data-page'); // get it's number
                        var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

                        if (pageNum == 'prev') {
                            if (lastPage == 1) {
                                return;
                            }
                            pageNum = --lastPage;
                        }
                        if (pageNum == 'next') {
                            if (lastPage == $('.pageArr li').length - 2) {
                                return;
                            }
                            pageNum = ++lastPage;
                        }

                        lastPage = pageNum;
                        var trIndex = 0; // reset tr counter
                        $('.pageArr li').removeClass('active'); // remove active class from all li
                        $('.pageArr [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                        // $(this).addClass('active');					// add active class to the clicked
                        limitPagging();
                        $(table + ' tr:gt(0)').each(function () {
                            // each tr in table not the header
                            trIndex++; // tr index counter
                            // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                            if (
                                trIndex > maxRows * pageNum ||
                                trIndex <= maxRows * pageNum - maxRows
                            ) {
                                $(this).hide();
                            } else {
                                $(this).show();
                            } //else fade in
                        }); // end of for each tr in table
                    }); // end of on click pagination list
                    limitPagging();
                })
                .val(5)
                .change();

            // end of on select change

            // END OF PAGINATION
        }

        function getPagination2(table) {
            var lastPage = 1;

            $('#maxRows')
                .on('change', function (evt) {
                    //$('.paginationprev').html('');						// reset pagination

                    lastPage = 1;
                    $('.pageCli')
                        .find('li')
                        .slice(1, -1)
                        .remove();
                    var trnum = 0; // reset tr counter
                    var maxRows = parseInt($(this).val()); // get Max Rows from select option

                    if (maxRows == 5000) {
                        $('.pageCli').hide();
                    } else {
                        $('.pageCli').show();
                    }

                    var totalRows = $(table + ' tbody tr').length; // numbers of rows
                    $(table + ' tr:gt(0)').each(function () {
                        // each TR in  table and not the header
                        trnum++; // Start Counter
                        if (trnum > maxRows) {
                            // if tr number gt maxRows

                            $(this).hide(); // fade it out
                        }
                        if (trnum <= maxRows) {
                            $(this).show();
                        } // else fade in Important in case if it ..
                    }); //  was fade out to fade it in
                    if (totalRows > maxRows) {
                        // if tr total rows gt max rows option
                        var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
                        //	numbers of pages
                        for (var i = 1; i <= pagenum;) {
                            // for each page append pagination li
                            $('.pageCli #prev')
                                .before(
                                    '<li data-page="' +
                                    i +
                                    '">\
                                              <span>' +
                                    i++ +
                                    '<span class="sr-only">(current)</span></span>\
                                            </li>'
                                )
                                .show();
                        } // end for i
                    } // end if row count > max rows
                    $('.pageCli [data-page="1"]').addClass('active'); // add active class to the first li
                    $('.pageCli li').on('click', function (evt) {
                        // on click each page
                        evt.stopImmediatePropagation();
                        evt.preventDefault();
                        var pageNum = $(this).attr('data-page'); // get it's number

                        var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

                        if (pageNum == 'prev') {
                            if (lastPage == 1) {
                                return;
                            }
                            pageNum = --lastPage;
                        }
                        if (pageNum == 'next') {
                            if (lastPage == $('.pageArr li').length - 2) {
                                return;
                            }
                            pageNum = ++lastPage;
                        }

                        lastPage = pageNum;
                        var trIndex = 0; // reset tr counter
                        $('.pageCli li').removeClass('active'); // remove active class from all li
                        $('.pageCli [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                        // $(this).addClass('active');					// add active class to the clicked
                        limitPagging2();
                        $(table + ' tr:gt(0)').each(function () {
                            // each tr in table not the header
                            trIndex++; // tr index counter
                            // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                            if (
                                trIndex > maxRows * pageNum ||
                                trIndex <= maxRows * pageNum - maxRows
                            ) {
                                $(this).hide();
                            } else {
                                $(this).show();
                            } //else fade in
                        }); // end of for each tr in table
                    }); // end of on click pagination list
                    limitPagging2();
                })
                .val(5)
                .change();

            // end of on select change

            // END OF PAGINATION
        }


        function limitPagging() {
            // alert($('.pagination li').length)
            if ($('.pageArr li').length > 7) {
                if ($('.pageArr li.active').attr('data-page') <= 3) {
                    $('.pageArr li:gt(5)').hide();
                    $('.pageArr li:lt(5)').show();
                    $('.pageArr [data-page="next"]').show();
                } if ($('.pageArr li.active').attr('data-page') > 3) {
                    $('.pageArr li:gt(0)').hide();
                    $('.pageArr [data-page="next"]').show();
                    for (let i = (parseInt($('.pageArr li.active').attr('data-page')) - 2); i <= (parseInt($('.pageArr li.active').attr('data-page')) + 2); i++) {
                        $('.pageArr [data-page="' + i + '"]').show();

                    }

                }
            }
        }

        function limitPagging2() {
            // alert($('.pagination li').length)

            if ($('.pageCli li').length > 7) {
                if ($('.pageCli li.active').attr('data-page') <= 3) {
                    $('.pageCli li:gt(5)').hide();
                    $('.pageCli li:lt(5)').show();
                    $('.pageCli [data-page="next"]').show();
                } if ($('.pageCli li.active').attr('data-page') > 3) {
                    $('.pageCli li:gt(0)').hide();
                    $('.pageCli [data-page="next"]').show();
                    for (let i = (parseInt($('.pageCli li.active').attr('data-page')) - 2); i <= (parseInt($('.pageCli li.active').attr('data-page')) + 2); i++) {
                        $('.pageCli [data-page="' + i + '"]').show();

                    }

                }
            }
        }

                //$(function () {
                //    // Just to append id number for each row
                //    $('table tr:eq(0)').prepend('<th> ID </th>');

                //    var id = 0;

                //    $('table tr:gt(0)').each(function () {
                //        id++;
                //        $(this).prepend('<td>' + id + '</td>');
                //    });
                //});

    </script>

}
