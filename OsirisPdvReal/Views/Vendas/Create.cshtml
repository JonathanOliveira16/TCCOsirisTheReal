@model OsirisPdvReal.Models.Venda

@{
    ViewData["Title"] = "Create";
}

<h5 class="divBtn fontTitles">REALIZAR VENDA</h5>
<hr />
<div class="row">
    <div class="col-md-6">
       
        <div>
            <form asp-action="SearchProduto">
                <div class="d-flex">
                    <input type="text" class="form-control borderInput w-50" name="busca" id="busca" placeholder="Pesquisar produto..." />
                    <button class="btn btn-success searchBtn" style="margin-left:1%;"><i class="fa fa-search text-white"></i></button>
                </div>
            </form>
            <div class="data-container"></div>
            <div id="pagination-demo1"></div>
            <table id="table-id" class="table mt-4 table-striped">
                <thead class="tHeadPurple">
                    <tr>
                        <th class="text-white" style="font-size:13px;">
                            Nome Produto
                        </th>
                        <th class="text-white" style="font-size:13px;">
                            Quantidade
                        </th>
                        <th class="text-white" style="font-size:13px;">
                            Valor
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in ViewBag.produtos)
                    {
                        <tr>
                            <td style="font-size:13px;">
                                @item.NomeProduto
                            </td>
                            <td style="font-size:13px;">
                                @item.QuantideProduto
                            </td>
                            <td style="font-size:13px;">
                                @item.ValorProduto
                            </td>
                            <td class="float-right">
                                <a class="btn-sm btn-success text-white btnVenda" asp-action="Edit" asp-route-id="@item.ProdutoId">Adicionar</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!--		Start Pagination -->
            <div class='pagination-container'>
                <nav>
                    <ul class="pagination">

                        <li data-page="prev">
                            <span style="border: 3px solid purple;margin-right:6px;border-radius:5px;color:black"> <i class="fa fa-arrow-left"></i> <span class="sr-only">(current)</span></span>
                        </li>
                        <!--	Here the JS Function Will Add the Rows -->
                        <li data-page="next" id="prev">
                            <span style="border: 3px solid purple;margin-left:6px;border-radius:5px"> <i class="fa fa-arrow-right"></i> <span class="sr-only">(current)</span></span>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>

         <div style="visibility:hidden;">
            <h2>Select Number Of Rows</h2>
            <div class="form-group">
                <!--		Show Numbers Of Rows 		-->
                <select class="form-control" name="state" id="maxRows">
                    <option value="5000">Show ALL Rows</option>
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="15">15</option>
                    <option value="20">20</option>
                    <option value="50">50</option>
                    <option value="70">70</option>
                    <option value="100">100</option>
                </select>

            </div>
        </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        getPagination('#table-id');
        //getPagination('.table-class');
        //getPagination('table');

        /*					PAGINATION
        - on change max rows select options fade out all rows gt option value mx = 5
        - append pagination list as per numbers of rows / max rows option (20row/5= 4pages )
        - each pagination li on click -> fade out all tr gt max rows * li num and (5*pagenum 2 = 10 rows)
        - fade out all tr lt max rows * li num - max rows ((5*pagenum 2 = 10) - 5)
        - fade in all tr between (maxRows*PageNum) and (maxRows*pageNum)- MaxRows
        */


        function getPagination(table) {
            var lastPage = 1;

            $('#maxRows')
                .on('change', function (evt) {
                    //$('.paginationprev').html('');						// reset pagination

                    lastPage = 1;
                    $('.pagination')
                        .find('li')
                        .slice(1, -1)
                        .remove();
                    var trnum = 0; // reset tr counter
                    var maxRows = parseInt($(this).val()); // get Max Rows from select option

                    if (maxRows == 5000) {
                        $('.pagination').hide();
                    } else {
                        $('.pagination').show();
                    }

                    var totalRows = $(table + ' tbody tr').length; // numbers of rows
                    $(table + ' tr:gt(0)').each(function () {
                        // each TR in  table and not the header
                        trnum++; // Start Counter
                        if (trnum > maxRows) {
                            // if tr number gt maxRows

                            $(this).hide(); // fade it out
                        }
                        if (trnum <= maxRows) {
                            $(this).show();
                        } // else fade in Important in case if it ..
                    }); //  was fade out to fade it in
                    if (totalRows > maxRows) {
                        // if tr total rows gt max rows option
                        var pagenum = Math.ceil(totalRows / maxRows); // ceil total(rows/maxrows) to get ..
                        //	numbers of pages
                        for (var i = 1; i <= pagenum;) {
                            // for each page append pagination li
                            $('.pagination #prev')
                                .before(
                                    '<li data-page="' +
                                    i +
                                    '">\
                                      <span>' +
                                    i++ +
                                    '<span class="sr-only">(current)</span></span>\
                                    </li>'
                                )
                                .show();
                        } // end for i
                    } // end if row count > max rows
                    $('.pagination [data-page="1"]').addClass('active'); // add active class to the first li
                    $('.pagination li').on('click', function (evt) {
                        // on click each page
                        evt.stopImmediatePropagation();
                        evt.preventDefault();
                        var pageNum = $(this).attr('data-page'); // get it's number

                        var maxRows = parseInt($('#maxRows').val()); // get Max Rows from select option

                        if (pageNum == 'prev') {
                            if (lastPage == 1) {
                                return;
                            }
                            pageNum = --lastPage;
                        }
                        if (pageNum == 'next') {
                            if (lastPage == $('.pagination li').length - 2) {
                                return;
                            }
                            pageNum = ++lastPage;
                        }

                        lastPage = pageNum;
                        var trIndex = 0; // reset tr counter
                        $('.pagination li').removeClass('active'); // remove active class from all li
                        $('.pagination [data-page="' + lastPage + '"]').addClass('active'); // add active class to the clicked
                        // $(this).addClass('active');					// add active class to the clicked
                        limitPagging();
                        $(table + ' tr:gt(0)').each(function () {
                            // each tr in table not the header
                            trIndex++; // tr index counter
                            // if tr index gt maxRows*pageNum or lt maxRows*pageNum-maxRows fade if out
                            if (
                                trIndex > maxRows * pageNum ||
                                trIndex <= maxRows * pageNum - maxRows
                            ) {
                                $(this).hide();
                            } else {
                                $(this).show();
                            } //else fade in
                        }); // end of for each tr in table
                    }); // end of on click pagination list
                    limitPagging();
                })
                .val(5)
                .change();

            // end of on select change

            // END OF PAGINATION
        }

        function limitPagging() {
            // alert($('.pagination li').length)

            if ($('.pagination li').length > 7) {
                if ($('.pagination li.active').attr('data-page') <= 3) {
                    $('.pagination li:gt(5)').hide();
                    $('.pagination li:lt(5)').show();
                    $('.pagination [data-page="next"]').show();
                } if ($('.pagination li.active').attr('data-page') > 3) {
                    $('.pagination li:gt(0)').hide();
                    $('.pagination [data-page="next"]').show();
                    for (let i = (parseInt($('.pagination li.active').attr('data-page')) - 2); i <= (parseInt($('.pagination li.active').attr('data-page')) + 2); i++) {
                        $('.pagination [data-page="' + i + '"]').show();

                    }

                }
            }
        }

        //$(function () {
        //    // Just to append id number for each row
        //    $('table tr:eq(0)').prepend('<th> ID </th>');

        //    var id = 0;

        //    $('table tr:gt(0)').each(function () {
        //        id++;
        //        $(this).prepend('<td>' + id + '</td>');
        //    });
        //});

    </script>

}
