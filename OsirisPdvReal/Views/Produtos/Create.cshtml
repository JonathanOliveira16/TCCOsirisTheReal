@model OsirisPdvReal.Models.Produto

@{
    ViewData["Title"] = "Create";
}

<div class="divBtn fontTitles">
    <h4>Adicionar Produto</h4>
</div>
<hr />
@if (TempData["msgSucesso"] != null)
{
    <div class="alert alert-danger alert-dismissable mt-2" style="margin-left:10%;margin-right:10%">
        <strong>@TempData["msgSucesso"]</strong>
    </div>
}
<div class="row">
    <div class="col-md-4">

    </div>
    <div class="col-md-4  borderPurple">
        <form asp-action="Create" class="mt-3">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="NomeProduto" class="control-label font-weight-bold"></label>
                <input asp-for="NomeProduto" class="form-control borderInput" />
                <span asp-validation-for="NomeProduto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ValorProduto" class="control-label font-weight-bold"></label>
                <input asp-for="ValorProduto" id="inp1" class="form-control borderInput" />
                <span asp-validation-for="ValorProduto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="QuantideProduto" class="control-label font-weight-bold"></label>
                <input asp-for="QuantideProduto" class="form-control borderInput" />
                <span asp-validation-for="QuantideProduto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label font-weight-bold" asp-for="TipoProdId"></label>
                <select class="form-control borderInput" id="sel1" asp-for="TipoProdId" asp-items="ViewBag.TipoProdId"></select>
            </div>
            <div class="divBtn flex-row mt-2 mb-2">

                <input type="submit" value="Adicionar" class="btn mr-3 btn-success btnNewCreate" />


                <a class="btn btn-info btnNewCreate ml-3" asp-action="Index">Voltar</a>

            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)?(?:,\d+)?$/.test(value);
        }

        var currencyMask = IMask(
            document.getElementById('inp1'),
            {
                mask: 'R$num',
                blocks: {
                    num: {
                        // nested masks are available!
                        scale: 2,  // digits after point, 0 for integers
                        mask: Number,
                        thousandsSeparator: '',  // any single char
                        radix: ',',  // fractional delimiter
                    }
                }
            });
    </script>
}
