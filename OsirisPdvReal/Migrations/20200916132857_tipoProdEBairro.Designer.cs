// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OsirisPdvReal.Models;

namespace OsirisPdvReal.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20200916132857_tipoProdEBairro")]
    partial class tipoProdEBairro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OsirisPdvReal.Models.Banca", b =>
                {
                    b.Property<int>("BancaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CPF")
                        .HasColumnType("bigint");

                    b.Property<long?>("JornaleiroCPF")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeBanca")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("BancaId");

                    b.HasIndex("JornaleiroCPF");

                    b.ToTable("Bancas");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Cliente", b =>
                {
                    b.Property<long>("CPFcliente")
                        .HasColumnType("bigint");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("CPFcliente");

                    b.HasIndex("StatusId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.ClienteBanca", b =>
                {
                    b.Property<int>("BancaId")
                        .HasColumnType("int");

                    b.Property<long>("CPFcliente")
                        .HasColumnType("bigint");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.HasKey("BancaId", "CPFcliente");

                    b.HasIndex("CPFcliente");

                    b.ToTable("ClienteBanca");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.CompraFornecedores", b =>
                {
                    b.Property<int?>("ComprasId")
                        .HasColumnType("int");

                    b.Property<long?>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FornecedorCNPJ")
                        .HasColumnType("bigint");

                    b.Property<double>("ValorCompra")
                        .HasColumnType("float");

                    b.HasKey("ComprasId", "CNPJ");

                    b.HasIndex("FornecedorCNPJ");

                    b.ToTable("CompraFornecedores");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Compras", b =>
                {
                    b.Property<int?>("ComprasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeItemCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("QuantidadeCompra")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("ValorCompra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComprasId");

                    b.HasIndex("CNPJ");

                    b.HasIndex("StatusId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Fornecedor", b =>
                {
                    b.Property<long?>("CNPJ")
                        .HasColumnType("bigint");

                    b.Property<string>("CEPFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)")
                        .HasMaxLength(9);

                    b.Property<string>("EmailFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("LogradouroFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NomeFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PontoFocalFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneFornecedor")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("CNPJ");

                    b.HasIndex("StatusId");

                    b.ToTable("Fornecedores");

                    b.HasData(
                        new
                        {
                            CNPJ = 12345678912L,
                            CEPFornecedor = "123456789",
                            EmailFornecedor = "no@gmail.com",
                            LogradouroFornecedor = "sem endereço",
                            NomeFornecedor = "Sem fornecedor",
                            PontoFocalFornecedor = "Sem ponto",
                            StatusId = 1,
                            TelefoneFornecedor = "11111111"
                        });
                });

            modelBuilder.Entity("OsirisPdvReal.Models.FornecedorBanca", b =>
                {
                    b.Property<int>("BancaId")
                        .HasColumnType("int");

                    b.Property<long>("CNPJ")
                        .HasColumnType("bigint");

                    b.HasKey("BancaId", "CNPJ");

                    b.HasIndex("CNPJ");

                    b.ToTable("FornecedorBanca");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Jornaleiro", b =>
                {
                    b.Property<long>("CPF")
                        .HasColumnType("bigint");

                    b.Property<int?>("BancaId")
                        .HasColumnType("int");

                    b.Property<string>("EmailJornaleiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("NomeJornaleiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SenhaJornaleiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TelefoneJornaleiro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("CPF");

                    b.HasIndex("BancaId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TipoId");

                    b.ToTable("Jornaleiros");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int>("QuantideProduto")
                        .HasColumnType("int");

                    b.Property<int>("TipoProdId")
                        .HasColumnType("int");

                    b.Property<string>("ValorProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId");

                    b.HasIndex("TipoProdId");

                    b.HasIndex("VendaId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.ProdutoCompras", b =>
                {
                    b.Property<int>("ComprasId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("ComprasId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoCompras");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Status", b =>
                {
                    b.Property<int?>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("StatusId");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            StatusId = 1,
                            NomeStatus = "Ativo"
                        },
                        new
                        {
                            StatusId = 2,
                            NomeStatus = "Inativo"
                        },
                        new
                        {
                            StatusId = 3,
                            NomeStatus = "Cancelado"
                        });
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Tipo", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoId");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            TipoId = 1,
                            NomeTipo = "Admin"
                        },
                        new
                        {
                            TipoId = 2,
                            NomeTipo = "User"
                        });
                });

            modelBuilder.Entity("OsirisPdvReal.Models.TipoProduto", b =>
                {
                    b.Property<int>("TipoProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTipoProduto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoProdId");

                    b.ToTable("TipoProdutos");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Venda", b =>
                {
                    b.Property<int?>("VendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BancaId")
                        .HasColumnType("int");

                    b.Property<long>("CPFcliente")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("float")
                        .HasMaxLength(30);

                    b.HasKey("VendaId");

                    b.HasIndex("BancaId");

                    b.HasIndex("CPFcliente");

                    b.HasIndex("StatusId");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.VendaProduto", b =>
                {
                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeVendida")
                        .HasColumnType("int");

                    b.HasKey("VendaId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("VendaProduto");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Banca", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Jornaleiro", "Jornaleiro")
                        .WithMany()
                        .HasForeignKey("JornaleiroCPF");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Cliente", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Status", "Status")
                        .WithMany("Clientes")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.ClienteBanca", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Banca", "Bancas")
                        .WithMany("ClienteBancas")
                        .HasForeignKey("BancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Cliente", "Clientes")
                        .WithMany("ClienteBancas")
                        .HasForeignKey("CPFcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.CompraFornecedores", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Compras", "Compras")
                        .WithMany()
                        .HasForeignKey("ComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorCNPJ");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Compras", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Fornecedor", "fornecedor")
                        .WithMany("Compras")
                        .HasForeignKey("CNPJ")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("OsirisPdvReal.Models.Status", "Status")
                        .WithMany("Compras")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Fornecedor", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Status", "Status")
                        .WithMany("Fornecedores")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.FornecedorBanca", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Banca", "Bancas")
                        .WithMany("FornecedorBanca")
                        .HasForeignKey("BancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Fornecedor", "Fornecedores")
                        .WithMany("FornecedorBanca")
                        .HasForeignKey("CNPJ")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Jornaleiro", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Banca", null)
                        .WithMany("Jornaleiros")
                        .HasForeignKey("BancaId");

                    b.HasOne("OsirisPdvReal.Models.Status", "Status")
                        .WithMany("Jornaleiros")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Tipo", "tipo")
                        .WithMany("Jornaleiro")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Produto", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.TipoProduto", "tipoProduto")
                        .WithMany("Produtos")
                        .HasForeignKey("TipoProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Venda", null)
                        .WithMany("ItemVenda")
                        .HasForeignKey("VendaId");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.ProdutoCompras", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Compras", "Compras")
                        .WithMany("ProdutoCompras")
                        .HasForeignKey("ComprasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Produto", "Produtos")
                        .WithMany("ProdutoCompras")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OsirisPdvReal.Models.Venda", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Banca", "Bancas")
                        .WithMany("Vendas")
                        .HasForeignKey("BancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Cliente", "Clientes")
                        .WithMany("Vendas")
                        .HasForeignKey("CPFcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Status", "Status")
                        .WithMany("Vendas")
                        .HasForeignKey("StatusId");
                });

            modelBuilder.Entity("OsirisPdvReal.Models.VendaProduto", b =>
                {
                    b.HasOne("OsirisPdvReal.Models.Produto", "Produtos")
                        .WithMany("VendaProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OsirisPdvReal.Models.Venda", "Vendas")
                        .WithMany("VendaProduto")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
